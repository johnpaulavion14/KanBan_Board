<div class="board-con">
  <span id="username" style="display: none;"><%= current_user.first_name %></span>
  <span id="group" style="display: none;"><%= @board.group %></span>
  <div style="margin-left:1rem" class="hs">
    <b>Host:</b>
    <span>
    | <span class="host"><%= @host %></span> |
    </span>
    <b style="margin-left:1rem">Scribe:</b>
    | <span class="scribe"><%= @scribe %></span>
    <% if @scribe == current_user.first_name %>
      <%= link_to "Start", view_cards_path, class: "btn btn-success mx-2", id: "start-scribe" %>
    <% else %>
      <span></span>
    <% end %> |

  </div>
  <%= render "start_scribe" %>
  <!-- Page scroll -->
  <div class="d-none page-scroll"><%= params[:page_scroll] %></div>
  <!-- Card  Section -->
  <div id="cards" class="card_container">
    <% @cards.each do |card| %>
      <div class="card_bg">
        <!-- Rocks -->
        <% if card.card_title.downcase == "rocks" %>
          <div class="card-con">
            <b class="card_title">
              <%= card.card_title %>
            </b>
            <%= link_to delete_card_path({card_id:card.id}),class:"del-card", data: {turbo_method: :delete, turbo_confirm: 'Are you sure?'} do %>
              <div class="addcard-pencon">
                <div class="addcard-penbox"></div>
                <div class="addcard-pencil"><%= image_tag ("delete.png"),class:"addcard-pen" %></div>
              </div>
            <% end %>
          </div>
          <div class="d-flex flex-column addcard-outercon">
            <% ProjectWorkspace.order("created_at asc").all.each do |workspace| %>
              <div class="addcard-con d-flex">
                <%= link_to view_addcards_path(params[:cb_id],card.id,card.addcards.first.id,ws_id:workspace.id), class:"addcard-name" do %>
                  <div><%= workspace.folder_name %></div>
                <% end %>
              </div>
            <% end %>
          </div>
        <!-- Scorecard -->
        <% elsif card.card_title.downcase.include?("scorecard")%>
         <div class="card-con">
            <b class="card_title">
              <%= card.card_title %>
            </b>
            <%= link_to delete_card_path({card_id:card.id}),class:"del-card", data: {turbo_method: :delete, turbo_confirm: 'Are you sure?'} do %>
              <div class="addcard-pencon">
                <div class="addcard-penbox"></div>
                <div class="addcard-pencil"><%= image_tag ("delete.png"),class:"addcard-pen" %></div>
              </div>
            <% end %>
          </div>
          <div class="d-flex flex-column addcard-outercon">
            <% ProjectWorkspace.order("created_at asc").all.each do |workspace| %>
              <div class="addcard-con d-flex">
                <%= link_to gantt_path, class:"addcard-name",target: :_blank do %>
                  <div><%= workspace.folder_name %></div>
                <% end %>
              </div>
            <% end %>
          </div>
        <% else %>
          <div class="card-con">
            <b class="card_title">
              <%= card.card_title %>
            </b>
            <%= link_to delete_card_path({card_id:card.id}),class:"del-card", data: {turbo_method: :delete, turbo_confirm: 'Are you sure?'} do %>
              <div class="addcard-pencon">
                <div class="addcard-penbox"></div>
                <div class="addcard-pencil"><%= image_tag ("delete.png"),class:"addcard-pen" %></div>
              </div>
            <% end %>
          </div>
          <div class="toggleCard">
            <%= form_with scope: :card, url:update_card_path({card_id:card.id}), method: :patch, local: true do |form| %>
              <%= form.text_field :page_scroll, class:"scroll-value d-none" %>
              <span class="pb-1">
                <%= form.text_field :card_title,required: true, class:"input_border",id:"card-input" %>
              </span>
              <span class="d-none"><%= image_submit_tag("check.png") %></span>
              <span class="cardX btn btn-primary mx-2">X</span>
            <% end %>
          </div>
          <!-- Addcard Section -->
          <div class="d-flex flex-column addcard-outercon">
            <% @addcards.each do |addcard| %>
              <% if card.id==addcard.card_id %>
                <div class="addcard-con d-flex">
                  <%= link_to view_addcards_path(params[:cb_id],card.id, addcard.id), class:"addcard-name" do %>
                    <div><%= addcard.card_name %></div>
                  <% end %>
                  <%= link_to delete_addcard_path(params[:cb_id],card.id,addcard.id),class:"del-addcard", data: {turbo_method: :delete, turbo_confirm: 'Are you sure?'} do %>
                    <div class="addcard-pencon">
                      <div class="addcard-penbox"></div>
                      <div class="addcard-pencil"><%= image_tag ("delete.png"),class:"addcard-pen" %></div>
                    </div>
                  <% end %>
                </div>
              <% end %>
            <% end %>
          </div>
          <div class="addcard-div mt-3">
            <div class="addcard">+ Add a card </div>
            <div class="mt-3 addcard-form">
              <%= form_with scope: :addcard, url:create_addcard_path(params[:cb_id],card.id), method: :post, local: true do |form| %>
                <%= form.text_field :page_scroll, class:"addlist-scroll-value d-none" %>
                <div class="pb-1">
                  <%= form.text_field :card_name, required: true,placeholder: "Enter a title for this card...",class:"form-con" %>
                </div>

                <div class="mt-2">
                  <%= form.submit "Addcard" , class:"save-desc" %>
                  <span class="cancel-desc">X</span>
                </div>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
    <!-- Addlist feature -->
    <div class="clickAddList add_list_btn">+ Add another list</div>
    <div class="toggleAddCard">
      <%= form_with scope: :card, url:create_card_path(params[:cb_id],), method: :post, local: true do |form| %>
        <%= form.text_field :page_scroll, class:"addlist-scroll-value d-none" %>
        <div class="pb-1">
          <%= form.text_field :card_title,required: true,type:"text",placeholder: "Enter list title..." , class:"input_border" %>
        </div>
        <div>
          <%= form.submit "Add list" , class:"btn btn-primary" %>
          <div class="clickX btn btn-primary">X</div>
        </div>
      <% end %>
    </div>
  </div>
</div>


<script>
  $(document).ready(function(){
    let remainingTime = 5 * 60; // 10 minutes in seconds
    let timer;
    let set_time;
    let running = false;
    let alertTriggered = false; // Flag to ensure alert is only triggered once
    // Function to format time in -hh:mm:ss
    let scribeSectionView = new URLSearchParams(window.location.search).get('scribe_section_view');
    if ( scribeSectionView == "attendance" ){
        if (localStorage.getItem('scribe_view') != scribeSectionView || localStorage.getItem('remainingTime') == 'NaN'|| localStorage.getItem('remainingTime') == 'undefined'){
          set_time = 300;
          localStorage.setItem('remainingTime', 300);
        }
        localStorage.setItem('scribe_view','attendance')
        localStorage.setItem('running', true);
    } else if( scribeSectionView == "segue" ){
        if (localStorage.getItem('scribe_view') != scribeSectionView || localStorage.getItem('remainingTime') == 'NaN'|| localStorage.getItem('remainingTime') == 'undefined'){
          set_time = 600;
          localStorage.setItem('remainingTime', 600);
        }
        localStorage.setItem('scribe_view','segue')
        localStorage.setItem('running', true);
    } else if( scribeSectionView == "rocks" ){
        if (localStorage.getItem('scribe_view') != scribeSectionView || localStorage.getItem('remainingTime') == 'NaN'|| localStorage.getItem('remainingTime') == 'undefined'){
          set_time = 900;
          localStorage.setItem('remainingTime', 900);
        }
        localStorage.setItem('scribe_view','rocks')          
        localStorage.setItem('running', true);
    } else if( scribeSectionView == "headline" ){
        if (localStorage.getItem('scribe_view') != scribeSectionView || localStorage.getItem('remainingTime') == 'NaN'|| localStorage.getItem('remainingTime') == 'undefined'){
          set_time = 600;
          localStorage.setItem('remainingTime', 600);
        }
        localStorage.setItem('scribe_view','headline')          
        localStorage.setItem('running', true);
    } else if( scribeSectionView == "todo" ){
        if (localStorage.getItem('scribe_view') != scribeSectionView || localStorage.getItem('remainingTime') == 'NaN'|| localStorage.getItem('remainingTime') == 'undefined'){
          set_time = 300;
          localStorage.setItem('remainingTime', 300);
        }
        localStorage.setItem('scribe_view','todo')          
        localStorage.setItem('running', true);
    } else if( scribeSectionView == "ids" ){
        if (localStorage.getItem('scribe_view') != scribeSectionView || localStorage.getItem('remainingTime') == 'NaN'|| localStorage.getItem('remainingTime') == 'undefined'){
          set_time = 2400;
          localStorage.setItem('remainingTime', 2400);
        }
        localStorage.setItem('scribe_view','ids')          
        localStorage.setItem('running', true);
    } else if( scribeSectionView == "conclusion" ){
        if (localStorage.getItem('scribe_view') != scribeSectionView || localStorage.getItem('remainingTime') == 'NaN'|| localStorage.getItem('remainingTime') == 'undefined'){
          set_time = 300;
          localStorage.setItem('remainingTime', 300);
        }
        localStorage.setItem('scribe_view','conclusion')          
        localStorage.setItem('running', true);
    } else {
    }
    function formatTime(seconds) {
        let isNegative = seconds < 0;
        let absSeconds = Math.abs(seconds);
        let hours = Math.floor(absSeconds / 3600);
        let mins = Math.floor((absSeconds % 3600) / 60);
        let secs = absSeconds % 60;
        return (isNegative ? '-' : '') +
                (hours < 10 ? '0' : '') + hours + ':' +
                (mins < 10 ? '0' : '') + mins + ':' +
                (secs < 10 ? '0' : '') + secs;
    }
    // Function to update timer display
    function updateTimer() {
        if (remainingTime <= 0 && !alertTriggered) {
            $('#timer').text(formatTime(remainingTime));
            alert('Time is up!');
            alertTriggered = true; // Ensure the alert only triggers once
        } else {
            $('#timer').text(formatTime(remainingTime));
            localStorage.setItem('remainingTime', remainingTime);
        }
        remainingTime--;
    }
    // Check if there is an existing timer state in localStorage
    if (localStorage.getItem('remainingTime')) {
        remainingTime = parseInt(localStorage.getItem('remainingTime'), 10);
        running = localStorage.getItem('running') === 'true';
        if (running) {
            updateTimer();
            timer = setInterval(updateTimer, 1000);
        } else {
            $('#timer').text(formatTime(remainingTime));
        }
    } else {
        $('#timer').text(formatTime(remainingTime));
        localStorage.setItem('remainingTime', remainingTime);
    }
    // Start button click handler
    $('#start-time').click(function() {
        if (!running) {
            running = true;
            localStorage.setItem('running', true);
            timer = setInterval(updateTimer, 1000);
        }
    });
    // Pause button click handler
    $('#pause-time').click(function() {
        if (running) {
            clearInterval(timer);
            running = false;
            localStorage.setItem('running', false);
        }
    });
    // Reset button click handler
    $('#reset-time').click(function() {
        clearInterval(timer);
        running = false;
        remainingTime = set_time;
        localStorage.setItem('remainingTime',set_time);
        localStorage.setItem('running', false);
        $('#timer').text(formatTime(set_time));
        alertTriggered = false; // Reset the alert trigger flag
    });
    $('.left-arrow').click(function() {
        $("#pause-time").trigger("click")
    });
    $('.right-arrow').click(function() {
        $("#pause-time").trigger("click")
    });
    $('#end-scribe').click(function() {
        $("#pause-time").trigger("click")
    });
    // Rocks Navbar Scribe View
    $(".rocks-navbar").each( function(index,element) {
      let rock_content = ".rocks-content-" + index
      $(element).click(function(){
        $(".rock-content").addClass("d-none")
        $(rock_content).removeClass("d-none");

        $(".rocks-navbar").removeClass("btn-outline-info btn-info")
        $(".rocks-navbar").addClass("btn-outline-info")
        $(this).removeClass("btn-outline-info")
        $(this).addClass("btn-info")
      })
    })
    $('.rocks-navbar').last().removeClass("btn-outline-info")
    $('.rocks-navbar').last().addClass("btn-info")
    $('.rock-content').last().removeClass("d-none")

    //Start and End Scribe
    $(".scribe-fullscreen-overlay").hide();
    $("#start-scribe").click(function(){
      $(".scribe-fullscreen-overlay").show();
    });
    let scribeView = localStorage.getItem('scribe_view');
    if (scribeView) {
      let currentHref = $('#start-scribe').attr('href'); // Get the current href
      let newHref = currentHref + '?scribe_section_view=' + encodeURIComponent(scribeView); // Append the parameter
      $('#start-scribe').attr('href', newHref); // Set the new href
    }

    $("#end-scribe").click(function(){
      $(".scribe-fullscreen-overlay").hide();
    });
    // Trigger Scribe view if scribe_section_view params is not null
    if ( scribeSectionView ){
      $("#start-scribe").trigger("click")
    }
    // toggle solution of IDS
    $(".solution-text").each( function(index,text) {
      $(text).click(function(){
        $(this).closest(".ids-list").next("#solution-textarea").toggleClass("d-none");
      })
    })
    // Submit Scribe Conclusion
    $(".submit-scribe-conclusion").click(function(){
      clearInterval(timer);
      localStorage.setItem('running', false);
      set_time = 300;
      localStorage.setItem('remainingTime', 300);
      localStorage.setItem('scribe_view','attendance')
    });
    $(".conclusion-scribe-form").on('keydown', function(event) {
      if (event.keyCode === 13) {
        event.preventDefault(); // Prevent form submission
      }    
    });
    // Initializescribe_view,and running
    if (!(localStorage.getItem('scribe_view') && localStorage.getItem('running'))){
      localStorage.setItem('scribe_view', 'attendance');
      localStorage.setItem('running', false);
    }
    //----------------- Scribe Todo Section -------------------
     // Scribe Create Todo
    $("#scribe-todo-form-div").hide()
    $(".scribe-todo-username-parent").each( function(index,username) {
      $(username).click(function(){
        let todo_id = $(this).children(".scribe-todo-username-id").text()
        $("#scribe-todo-userid").val(todo_id)
        $(this).next().next().append($("#scribe-todo-form-div"))
        $("#scribe-todo-form-div").show()
        
      });
    }); 
    // Scribe Edit Todo
    $(".scribe-task-text").each( function(index,task) {
      $(task).dblclick(function(){
        let todo_id = $(this).next().text()
        $("#scribe-todo-userid").val(todo_id)
        let task_text = $(this).text()
        $(this).after($("#scribe-todo-form-div"))
        $(".scribe-task-text").show()
        $(this).hide()
        $("#scribe-todo-form-div").show()
        $("#scribe-input-todo").val(task_text)
        $('#scribe-todo-form').attr('method', 'patch');
        let newAction = $('#scribe-todo-form').attr('action').replace('todo', 'updatetodo');
        $('#scribe-todo-form').attr('action', newAction);
      });
    }); 
 
    // Addlist feature
    $(".clickAddList").click(function(){
      $(".toggleAddCard").show();
      $(this).hide();

       // Scroll Value
       let scroll_val = $(".card_container").scrollLeft()
      $(".addlist-scroll-value").val(scroll_val)
    });

    $(".clickX").click(function(){
      $(".toggleAddCard").hide();
      $(".clickAddList").show();
    });

    // Addcard feature
    $(".addcard-form").css("display", "none")
    $(".addcard").click(function(){
      $(".addcard").show();
      $(".addcard-form").hide();
      $(this).hide();
      $(this).siblings(".addcard-form").show();
    });
    $(".addcard").click(function(){
      $(".addcard").show();
      $(".addcard-form").hide();
      $(this).hide();
      $(this).siblings(".addcard-form").show();
      // Scroll Value
      let scroll_val = $(".card_container").scrollLeft()
      $(this).siblings(".addcard-form").find(".addlist-scroll-value").val(scroll_val)
    });
    $(".addcard-name").click(function(){
      let scroll = $(".card_container").scrollLeft()
      let href = $(this).attr("href") + `?page_scroll=${scroll}`
      $(this).attr("href", href);
    });

    $(".cancel-desc").click(function(){
      $(".addcard-form").hide();
      $(".addcard").show();
    });
     // Add page scroll after delete addcard
     $(".del-addcard").each( function(index,deladdcard) {
      $(deladdcard).click(function(){
        let scroll_val = $(".card_container").scrollLeft()
        let href = $(this).attr("href") + `?page_scroll=${scroll_val}`
        $(this).attr("href", href);
      });
    });

    // Card Section
    $(".toggleCard").css("display", "none")
    $(".card_title").click(function(){
      let input_value = $(this).text().trimLeft();
        $(".card-con").show();
        $(".toggleCard").hide();
        $(this).parent(".card-con").hide();
        $(this).parent(".card-con").siblings(".toggleCard").show();
        $(this).parent(".card-con").siblings(".toggleCard").find("#card-input").val(input_value);
        // Scroll Section
        let scroll_val = $(".card_container").scrollLeft()
        $(this).parent(".card-con").next(".toggleCard").find(".scroll-value").val(scroll_val)
    });

    $(".cardX").click(function(){
      $(".toggleCard").hide();
      $(this).parents(".toggleCard").siblings(".card-con").show();
    });

    // Add page scroll after delete card
    $(".del-card").each( function(index,delcard) {
      $(delcard).click(function(){
        let scroll_val = $(".card_container").scrollLeft()
        let href = $(this).attr("href") + `?page_scroll=${scroll_val}`
        $(this).attr("href", href);
      });
    });

    // Disable non host or scribe
    let hosts = $(".host").text();
    let scribes = $(".scribe").text();
    let username = $("#username").text();
    let group = $("#group").text();
    if (hosts.includes(username) || scribes.includes(username)){
    }else if(group == "true"){
      $(".card-con").css("pointer-events", "none") // disable edit & delete card for non host and scribe
      $(".del-addcard").css("display", "none") // disable edit & delete addcard for non host and scribe
      $(".addcard").css("pointer-events", "none") // disable adding card for non host and scribe
      $(".clickAddList").css("pointer-events", "none") // disable adding card for non host and scribe
    } 
    if (group == "false"){
      $(".hs").hide();
    }

    // Scroll Section
    let scroll = $(".page-scroll").text()
      $(".card_container").scrollLeft(scroll)

  

  });
  


</script>



